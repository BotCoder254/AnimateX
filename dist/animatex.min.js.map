{"version":3,"file":"animatex.min.js","sources":["../src/animatex.js"],"sourcesContent":["/**\n * AnimateX - Professional Animation Framework\n * Version 1.0.0\n * MIT License\n */\n\nclass AnimateX {\n    constructor(options = {}) {\n        this.options = {\n            threshold: 0.1,\n            rootMargin: '20px',\n            duration: 300,\n            easing: 'ease',\n            debug: false,\n            ...options\n        };\n        \n        this.observers = new Map();\n        this.initialized = false;\n        this.init();\n    }\n\n    /**\n     * Initialize the animation framework\n     * @private\n     */\n    init() {\n        if (this.initialized) return;\n        \n        try {\n            this.setupAnimationObserver();\n            this.setupHoverAnimations();\n            this.setupClickAnimations();\n            this.setupSequenceAnimations();\n            this.setupParallaxEffects();\n            this.setupStateAnimations();\n            \n            this.initialized = true;\n            this.dispatchEvent('anx:initialized');\n        } catch (error) {\n            this.handleError('Initialization failed', error);\n        }\n    }\n\n    /**\n     * Set up the Intersection Observer for entry animations\n     * @private\n     */\n    setupAnimationObserver() {\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.isIntersecting) {\n                    const element = entry.target;\n                    this.applyAnimation(element, 'anx-animate');\n                    observer.unobserve(element);\n                }\n            });\n        }, {\n            threshold: this.options.threshold,\n            rootMargin: this.options.rootMargin\n        });\n\n        this.observers.set('animation', observer);\n        this.observeElements('[anx-animate]', observer);\n    }\n\n    /**\n     * Set up hover animations\n     * @private\n     */\n    setupHoverAnimations() {\n        document.querySelectorAll('[anx-hover]').forEach(element => {\n            const animation = element.getAttribute('anx-hover');\n            if (!animation) return;\n\n            const animations = animation.split(' ');\n            const enterHandler = () => {\n                requestAnimationFrame(() => {\n                    animations.forEach(anim => {\n                        element.classList.add(`anx-${anim}`);\n                    });\n                    this.dispatchEvent('anx:hover:start', { element, animations });\n                });\n            };\n\n            const leaveHandler = () => {\n                requestAnimationFrame(() => {\n                    animations.forEach(anim => {\n                        element.classList.remove(`anx-${anim}`);\n                    });\n                    this.dispatchEvent('anx:hover:end', { element, animations });\n                });\n            };\n\n            element.addEventListener('mouseenter', enterHandler);\n            element.addEventListener('mouseleave', leaveHandler);\n            element._anxCleanup = () => {\n                element.removeEventListener('mouseenter', enterHandler);\n                element.removeEventListener('mouseleave', leaveHandler);\n            };\n        });\n    }\n\n    /**\n     * Set up click animations\n     * @private\n     */\n    setupClickAnimations() {\n        document.querySelectorAll('[anx-click]').forEach(element => {\n            const animation = element.getAttribute('anx-click');\n            if (!animation) return;\n\n            const clickHandler = () => {\n                const animations = animation.split(' ');\n                requestAnimationFrame(() => {\n                    animations.forEach(anim => {\n                        const className = `anx-${anim}`;\n                        element.classList.add(className);\n                        this.dispatchEvent('anx:click:start', { element, animation: anim });\n                        \n                        const duration = parseInt(getComputedStyle(element).animationDuration) || this.options.duration;\n                        setTimeout(() => {\n                            element.classList.remove(className);\n                            this.dispatchEvent('anx:click:end', { element, animation: anim });\n                        }, duration);\n                    });\n                });\n            };\n\n            element.addEventListener('click', clickHandler);\n            element._anxCleanup = () => {\n                element.removeEventListener('click', clickHandler);\n            };\n        });\n    }\n\n    /**\n     * Set up sequence animations\n     * @private\n     */\n    setupSequenceAnimations() {\n        document.querySelectorAll('[anx-sequence]').forEach(parent => {\n            const children = Array.from(parent.children);\n            const delay = parseInt(parent.getAttribute('anx-sequence-delay') || 100);\n            const stagger = parent.getAttribute('anx-sequence-stagger');\n            \n            children.forEach((child, index) => {\n                let computedDelay;\n                if (stagger === 'random') {\n                    computedDelay = Math.random() * 1000;\n                } else {\n                    computedDelay = delay * index;\n                }\n                \n                child.style.setProperty('--anx-delay', `${computedDelay}ms`);\n                this.dispatchEvent('anx:sequence:item', { element: child, delay: computedDelay, index });\n            });\n            \n            this.dispatchEvent('anx:sequence:ready', { element: parent, itemCount: children.length });\n        });\n    }\n\n    /**\n     * Set up parallax effects\n     * @private\n     */\n    setupParallaxEffects() {\n        const elements = document.querySelectorAll('[anx-parallax]');\n        if (!elements.length) return;\n\n        let ticking = false;\n        const update = () => {\n            elements.forEach(element => {\n                if (!element.isConnected) return;\n                \n                const speed = parseFloat(element.getAttribute('anx-parallax') || 0.5);\n                const rect = element.getBoundingClientRect();\n                const scrolled = window.pageYOffset;\n                const position = (scrolled - (rect.top + scrolled - window.innerHeight/2)) * speed;\n                \n                requestAnimationFrame(() => {\n                    element.style.transform = `translate3d(0, ${position}px, 0)`;\n                });\n            });\n            ticking = false;\n        };\n\n        window.addEventListener('scroll', () => {\n            if (!ticking) {\n                ticking = true;\n                requestAnimationFrame(update);\n            }\n        }, { passive: true });\n    }\n\n    /**\n     * Set up state-based animations\n     * @private\n     */\n    setupStateAnimations() {\n        document.querySelectorAll('[anx-state]').forEach(element => {\n            const states = element.getAttribute('anx-state').split(' ');\n            \n            states.forEach(state => {\n                const [trigger, animation] = state.split(':');\n                if (!trigger || !animation) return;\n\n                const addClass = () => element.classList.add(`anx-${animation}`);\n                const removeClass = () => element.classList.remove(`anx-${animation}`);\n\n                switch(trigger) {\n                    case 'focus':\n                        element.addEventListener('focus', addClass);\n                        element.addEventListener('blur', removeClass);\n                        break;\n                    case 'active':\n                        element.addEventListener('mousedown', addClass);\n                        element.addEventListener('mouseup', removeClass);\n                        element.addEventListener('mouseleave', removeClass);\n                        break;\n                    case 'visible':\n                        this.createVisibilityObserver(element, animation);\n                        break;\n                }\n            });\n        });\n    }\n\n    /**\n     * Create a visibility observer for an element\n     * @private\n     */\n    createVisibilityObserver(element, animation) {\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                const className = `anx-${animation}`;\n                if (entry.isIntersecting) {\n                    element.classList.add(className);\n                } else {\n                    element.classList.remove(className);\n                }\n            });\n        }, this.options);\n\n        observer.observe(element);\n        return observer;\n    }\n\n    /**\n     * Apply animations to an element\n     * @private\n     */\n    applyAnimation(element, attribute) {\n        const animation = element.getAttribute(attribute);\n        if (!animation) return;\n\n        const animations = animation.split(' ');\n        animations.forEach(anim => {\n            requestAnimationFrame(() => {\n                element.classList.add('anx-animated', `anx-${anim}`);\n                this.dispatchEvent('anx:animate:start', { element, animation: anim });\n                \n                element.addEventListener('animationend', () => {\n                    this.dispatchEvent('anx:animate:end', { element, animation: anim });\n                }, { once: true });\n            });\n        });\n    }\n\n    /**\n     * Observe elements with a specific selector\n     * @private\n     */\n    observeElements(selector, observer) {\n        document.querySelectorAll(selector).forEach(element => {\n            observer.observe(element);\n        });\n    }\n\n    /**\n     * Dispatch a custom event\n     * @private\n     */\n    dispatchEvent(name, detail = {}) {\n        const event = new CustomEvent(name, { \n            detail: { ...detail, instance: this }\n        });\n        document.dispatchEvent(event);\n        \n        if (this.options.debug) {\n            console.log(`AnimateX Event: ${name}`, detail);\n        }\n    }\n\n    /**\n     * Handle errors\n     * @private\n     */\n    handleError(message, error) {\n        const event = new CustomEvent('anx:error', {\n            detail: { message, error, instance: this }\n        });\n        document.dispatchEvent(event);\n        \n        if (this.options.debug) {\n            console.error(`AnimateX Error: ${message}`, error);\n        }\n    }\n\n    /**\n     * Clean up animations and observers\n     * @public\n     */\n    destroy() {\n        this.observers.forEach(observer => observer.disconnect());\n        this.observers.clear();\n        \n        document.querySelectorAll('[anx-hover], [anx-click]').forEach(element => {\n            if (element._anxCleanup) {\n                element._anxCleanup();\n                delete element._anxCleanup;\n            }\n        });\n        \n        this.initialized = false;\n        this.dispatchEvent('anx:destroyed');\n    }\n\n    /**\n     * Initialize AnimateX\n     * @public\n     * @static\n     */\n    static init(options = {}) {\n        return new AnimateX(options);\n    }\n}\n\n// Auto-initialize when DOM is loaded\nif (typeof window !== 'undefined') {\n    window.addEventListener('DOMContentLoaded', () => {\n        window.AnimateX = AnimateX.init();\n    });\n}\n\nexport default AnimateX; "],"names":["AnimateX","constructor","options","this","threshold","rootMargin","duration","easing","debug","observers","Map","initialized","init","setupAnimationObserver","setupHoverAnimations","setupClickAnimations","setupSequenceAnimations","setupParallaxEffects","setupStateAnimations","dispatchEvent","error","handleError","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","element","target","applyAnimation","unobserve","set","observeElements","document","querySelectorAll","animation","getAttribute","animations","split","enterHandler","requestAnimationFrame","anim","classList","add","leaveHandler","remove","addEventListener","_anxCleanup","removeEventListener","clickHandler","className","parseInt","getComputedStyle","animationDuration","setTimeout","parent","children","Array","from","delay","stagger","child","index","computedDelay","Math","random","style","setProperty","itemCount","length","elements","ticking","update","isConnected","speed","parseFloat","rect","getBoundingClientRect","scrolled","window","pageYOffset","position","top","innerHeight","transform","passive","state","trigger","addClass","removeClass","createVisibilityObserver","observe","attribute","once","selector","name","detail","event","CustomEvent","instance","console","log","message","destroy","disconnect","clear"],"mappings":"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"}